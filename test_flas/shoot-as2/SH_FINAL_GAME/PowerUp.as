/*The PowerUp class is linked to a PowerUp movie clip in the library that will get attached to stage when triggeredby the powerupTimer in the Ship class*/class PowerUp extends MovieClip{	//We want to create a couple of varibles to keep track of important PowerUp information. 	//We must define them here		//This will store how fast the PowerUp travels	var speed;	//This will keep store whether the PowerUp is a HEALTH, SHIELD, or NUKE powerup	var type;	//This onLoad function is a built-in function of every movie clip. 	//When a PowerUp is first loaded onto stage (it will get attached to the stage from the library) we want to:	function onLoad()	{		//Add an explosion sound fx. we create the _root.soundFX sound object in the Ship class		_root.soundFX.attachSound("beepx3.mp3");		_root.soundFX.start();				//Set it's speed variable to 20(we want it to move 2 pixels left at frame rate		speed = 2;		//Set its type property to a random number between 1 and 3, since it can be one of three possible powerup types		type = Math.floor(Math.random()*3+1);				//start the powerup beyond the far right edge of the stage		_x = 650;		//give it a random y position between 50 and 250		_y = Math.random()*200+50;	}			//This onEnterFrame function is a built-in function of every movie clip. 	//All the code that we need to continuously execute at 30 frames a second goes inside this function	function onEnterFrame()	{		// --- HORIZONTAL MOVEMENT LOGIC ---		//move the missile left 2 pixels (we set it's speed to 2 in the onLoad() function)		_x -= speed;		//let's constantly rotate this clip for fun		_rotation -= 5;				// --- COLLISION DETECTION LOGIC ---		//At frame rate, we want to see if this powerUp clip is htting the ship		if(this.hitTest(_root.ship))		{					//if it is						//create a local variable inside this function			var powerupName;					//If the random type that we set in the onLoad function is 1, lets make this powerup a HEALTH powerup			if(type == 1)			{				//update the ship's health back to 100 (by adding the difference of 100 and it's current health to it)				_root.ship.updateHealth(100 - _root.ship.health);				//set the name variable to the word "health"				powerupName = "health";								//Add an explosion sound fx. we create the _root.soundFX sound object in the Ship class				_root.soundFX.attachSound("bling.mp3");				_root.soundFX.start();			}			//If the random type that we set in the onLoad function is 2, lets make this powerup a NUKE powerup			if(type == 2)			{				//call the damageAllEnemies() function of the Ship class that will inflict damage on every enemy on stage				_root.ship.damageAllEnemies();				//set the name variable to the word "nuke"				powerupName = "nuke";								//Add an explosion sound fx. we create the _root.soundFX sound object in the Ship class				_root.soundFX.attachSound("very_big_explosion.wav");				_root.soundFX.start();			}			//If the random type that we set in the onLoad function is 3, lets make this powerup a SHIELD powerup			if(type == 3)			{				//unhide the shield movie clip that is nested inside the ship movie clip				_root.ship.shield._visible=true;				//set the name variable to the word "shield"				powerupName = "shield";								//Add an explosion sound fx. we create the _root.soundFX sound object in the Ship class				_root.soundFX.attachSound("energy.mp3");				_root.soundFX.start();			}						//Now attach a reward disaply clip to the stage			var rewardDisplay = _root.attachMovie("RewardPoints","RewardPoints" + _root.getNextHighestDepth(), _root.getNextHighestDepth());			//position it at the location of the powerup			rewardDisplay._x = _x;			rewardDisplay._y = _y;			//and set it's text filed to the local powerupName variable name, so the player can clearly see the name of the powerup as it takes affect			rewardDisplay.field.text = powerupName;			//lastly remove this powerup movie clip form the stage			this.removeMovieClip();		}				//If the powerup reaches the far left edge of the stage without getting used		if( _x < -30 )		{			//just remove it from stage			this.removeMovieClip();		}	}				}